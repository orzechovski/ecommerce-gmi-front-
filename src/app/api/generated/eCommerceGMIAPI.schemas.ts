/**
 * Generated by orval v7.1.1 üç∫
 * Do not edit manually.
 * E-commerce GMI API
 * API documentation for the E-commerce gmi project
 * OpenAPI spec version: 1.0
 */
export interface UpdateProductDto { [key: string]: unknown }

/**
 * Additional metadata for the product
 */
export type CreateProductDtoMetadata = { [key: string]: unknown };

export interface CreateProductDto {
  /** Collection ID for the product */
  collection_id?: string;
  /** Description of the product */
  description: string;
  /** Is the product discountable? */
  discountable?: boolean;
  /** External ID for the product */
  external_id?: string;
  /** Height of the product */
  height?: number;
  /** HS Code of the product */
  hs_code?: string;
  /** Is this a gift card? */
  is_giftcard?: boolean;
  /** Length of the product */
  length?: number;
  /** Material used for the product */
  material?: string;
  /** Additional metadata for the product */
  metadata?: CreateProductDtoMetadata;
  /** MID Code of the product */
  mid_code?: string;
  /** Country of origin */
  origin_country?: string;
  /** Price of the product */
  price: number;
  /** Profile ID for the product */
  profile_id?: string;
  /** Status of the product */
  status?: string;
  /** Number of items in stock */
  stock: number;
  /** Subtitle of the product */
  subtitle?: string;
  /** Thumbnail image URL */
  thumbnail?: string;
  /** Title of the product */
  title: string;
  /** Type ID for the product */
  type_id?: string;
  /** Weight of the product */
  weight?: number;
  /** Width of the product */
  width?: number;
}

export interface AuthResponseDto {
  /** Access token for the user */
  access_token: string;
}

export interface LoginAuthDto {
  /** User email address */
  email: string;
  /** User password */
  password: string;
}

export interface RegisterAuthDto {
  /** Billing address ID */
  billing_address_id?: string;
  /** User email address */
  email: string;
  /** First name of the user */
  first_name?: string;
  /** Last name of the user */
  last_name?: string;
  /** User password, minimum length 6 */
  password: string;
}

export interface OrderDto {
  /** Date when the order was created */
  createdAt: string;
  /** ID of the customer who placed the order */
  customer_id: string;
  /** Unique identifier for the order */
  id: string;
  /** List of items included in the order */
  items: CartItemDto[];
  /** Current payment status of the order */
  payment_status: string;
  /** Shipping address for the order */
  shipping_address: string;
  /** Current status of the order */
  status: string;
  /** Total price of the order */
  total_price: number;
  /** Date when the order was last updated */
  updatedAt: string;
}

export interface CreateOrderDto {
  /** ID of the customer */
  customerId: string;
}

/**
 * Can be a string, number, or object (JSON)
 * @nullable
 */
export type CartDtoPaymentSession = { [key: string]: unknown } | null;

/**
 * Can be any valid JSON value
 * @nullable
 */
export type CartDtoMetadata = { [key: string]: unknown } | null;

/**
 * Can be any valid JSON value
 * @nullable
 */
export type CartDtoContext = { [key: string]: unknown } | null;

export interface CartDto {
  /** @nullable */
  completed_at: string | null;
  /**
   * Can be any valid JSON value
   * @nullable
   */
  context: CartDtoContext;
  createdAt: string;
  customer_id: string;
  /** @nullable */
  deletedAt: string | null;
  email: string;
  id: string;
  /** @nullable */
  idempotency_key: string | null;
  items: CartItemDto[];
  /**
   * Can be any valid JSON value
   * @nullable
   */
  metadata: CartDtoMetadata;
  /** @nullable */
  payment_authorized_at: string | null;
  /** @nullable */
  payment_id: string | null;
  /**
   * Can be a string, number, or object (JSON)
   * @nullable
   */
  payment_session: CartDtoPaymentSession;
  type: string;
  updatedAt: string;
}

/**
 * Additional metadata for the product
 * @nullable
 */
export type ProductDtoMetadata = { [key: string]: unknown } | null;

export interface ProductDto {
  /**
   * Collection ID the product belongs to
   * @nullable
   */
  collection_id?: string | null;
  /** Creation date of the product */
  createdAt: string;
  /**
   * Deletion date of the product, if deleted
   * @nullable
   */
  deletedAt: string | null;
  /** Description of the product */
  description: string;
  /** Is the product discountable? */
  discountable?: boolean;
  /**
   * External ID of the product
   * @nullable
   */
  external_id?: string | null;
  /**
   * Height of the product
   * @nullable
   */
  height?: number | null;
  /**
   * HS Code of the product
   * @nullable
   */
  hs_code?: string | null;
  /** ID of the product */
  id: string;
  /** Is this product a gift card? */
  is_giftcard?: boolean;
  /**
   * Length of the product
   * @nullable
   */
  length?: number | null;
  /**
   * Material used in the product
   * @nullable
   */
  material?: string | null;
  /**
   * Additional metadata for the product
   * @nullable
   */
  metadata?: ProductDtoMetadata;
  /**
   * MID code of the product
   * @nullable
   */
  mid_code?: string | null;
  /**
   * Country of origin
   * @nullable
   */
  origin_country?: string | null;
  /** Price of the product */
  price: number;
  /**
   * Profile ID associated with the product
   * @nullable
   */
  profile_id?: string | null;
  /** Status of the product */
  status?: string;
  /** Stock available for the product */
  stock: number;
  /**
   * Subtitle of the product
   * @nullable
   */
  subtitle?: string | null;
  /**
   * Thumbnail URL
   * @nullable
   */
  thumbnail?: string | null;
  /** Title of the product */
  title: string;
  /**
   * Product type ID
   * @nullable
   */
  type_id?: string | null;
  /** Last update date of the product */
  updatedAt: string;
  /**
   * Weight of the product
   * @nullable
   */
  weight?: number | null;
  /**
   * Width of the product
   * @nullable
   */
  width?: number | null;
}

export interface CartItemDto {
  /** ID of the cart item */
  cartId: string;
  createdAt: string;
  id: string;
  product: ProductDto;
  productId: string;
  quantity: number;
  updatedAt: string;
}

export interface RemoveFromCartDto {
  /** ID of the customer */
  customerId: string;
  /** ID of the product */
  productId: string;
  /** Quantity of the product to remove */
  quantity: number;
}

export interface AddToCartDto {
  /** ID of the customer */
  customerId: string;
  /** ID of the product */
  productId: string;
  /** Quantity of the product to add */
  quantity: number;
}

